// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: quiz.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ClientMsg struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	PlayerId string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"` // 初回は空でOK（サーバから払い出し）
	// Types that are valid to be assigned to Payload:
	//
	//	*ClientMsg_Join
	//	*ClientMsg_Buzz
	//	*ClientMsg_Answer
	//	*ClientMsg_Hb
	Payload       isClientMsg_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientMsg) Reset() {
	*x = ClientMsg{}
	mi := &file_quiz_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMsg) ProtoMessage() {}

func (x *ClientMsg) ProtoReflect() protoreflect.Message {
	mi := &file_quiz_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMsg.ProtoReflect.Descriptor instead.
func (*ClientMsg) Descriptor() ([]byte, []int) {
	return file_quiz_proto_rawDescGZIP(), []int{0}
}

func (x *ClientMsg) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *ClientMsg) GetPayload() isClientMsg_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *ClientMsg) GetJoin() *Join {
	if x != nil {
		if x, ok := x.Payload.(*ClientMsg_Join); ok {
			return x.Join
		}
	}
	return nil
}

func (x *ClientMsg) GetBuzz() *Buzz {
	if x != nil {
		if x, ok := x.Payload.(*ClientMsg_Buzz); ok {
			return x.Buzz
		}
	}
	return nil
}

func (x *ClientMsg) GetAnswer() *Answer {
	if x != nil {
		if x, ok := x.Payload.(*ClientMsg_Answer); ok {
			return x.Answer
		}
	}
	return nil
}

func (x *ClientMsg) GetHb() *Heartbeat {
	if x != nil {
		if x, ok := x.Payload.(*ClientMsg_Hb); ok {
			return x.Hb
		}
	}
	return nil
}

type isClientMsg_Payload interface {
	isClientMsg_Payload()
}

type ClientMsg_Join struct {
	Join *Join `protobuf:"bytes,10,opt,name=join,proto3,oneof"`
}

type ClientMsg_Buzz struct {
	Buzz *Buzz `protobuf:"bytes,11,opt,name=buzz,proto3,oneof"`
}

type ClientMsg_Answer struct {
	Answer *Answer `protobuf:"bytes,12,opt,name=answer,proto3,oneof"`
}

type ClientMsg_Hb struct {
	Hb *Heartbeat `protobuf:"bytes,13,opt,name=hb,proto3,oneof"`
}

func (*ClientMsg_Join) isClientMsg_Payload() {}

func (*ClientMsg_Buzz) isClientMsg_Payload() {}

func (*ClientMsg_Answer) isClientMsg_Payload() {}

func (*ClientMsg_Hb) isClientMsg_Payload() {}

type Join struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Join) Reset() {
	*x = Join{}
	mi := &file_quiz_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Join) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Join) ProtoMessage() {}

func (x *Join) ProtoReflect() protoreflect.Message {
	mi := &file_quiz_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Join.ProtoReflect.Descriptor instead.
func (*Join) Descriptor() ([]byte, []int) {
	return file_quiz_proto_rawDescGZIP(), []int{1}
}

func (x *Join) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Buzz struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TsMs          int64                  `protobuf:"varint,1,opt,name=ts_ms,json=tsMs,proto3" json:"ts_ms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Buzz) Reset() {
	*x = Buzz{}
	mi := &file_quiz_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Buzz) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Buzz) ProtoMessage() {}

func (x *Buzz) ProtoReflect() protoreflect.Message {
	mi := &file_quiz_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Buzz.ProtoReflect.Descriptor instead.
func (*Buzz) Descriptor() ([]byte, []int) {
	return file_quiz_proto_rawDescGZIP(), []int{2}
}

func (x *Buzz) GetTsMs() int64 {
	if x != nil {
		return x.TsMs
	}
	return 0
}

type Answer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Text          string                 `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Answer) Reset() {
	*x = Answer{}
	mi := &file_quiz_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Answer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Answer) ProtoMessage() {}

func (x *Answer) ProtoReflect() protoreflect.Message {
	mi := &file_quiz_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Answer.ProtoReflect.Descriptor instead.
func (*Answer) Descriptor() ([]byte, []int) {
	return file_quiz_proto_rawDescGZIP(), []int{3}
}

func (x *Answer) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type Heartbeat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Heartbeat) Reset() {
	*x = Heartbeat{}
	mi := &file_quiz_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Heartbeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Heartbeat) ProtoMessage() {}

func (x *Heartbeat) ProtoReflect() protoreflect.Message {
	mi := &file_quiz_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Heartbeat.ProtoReflect.Descriptor instead.
func (*Heartbeat) Descriptor() ([]byte, []int) {
	return file_quiz_proto_rawDescGZIP(), []int{4}
}

type ServerMsg struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Payload:
	//
	//	*ServerMsg_Welcome
	//	*ServerMsg_Question
	//	*ServerMsg_Buzz
	//	*ServerMsg_Judge
	//	*ServerMsg_Board
	//	*ServerMsg_Info
	//	*ServerMsg_Err
	Payload       isServerMsg_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerMsg) Reset() {
	*x = ServerMsg{}
	mi := &file_quiz_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerMsg) ProtoMessage() {}

func (x *ServerMsg) ProtoReflect() protoreflect.Message {
	mi := &file_quiz_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerMsg.ProtoReflect.Descriptor instead.
func (*ServerMsg) Descriptor() ([]byte, []int) {
	return file_quiz_proto_rawDescGZIP(), []int{5}
}

func (x *ServerMsg) GetPayload() isServerMsg_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *ServerMsg) GetWelcome() *Welcome {
	if x != nil {
		if x, ok := x.Payload.(*ServerMsg_Welcome); ok {
			return x.Welcome
		}
	}
	return nil
}

func (x *ServerMsg) GetQuestion() *Question {
	if x != nil {
		if x, ok := x.Payload.(*ServerMsg_Question); ok {
			return x.Question
		}
	}
	return nil
}

func (x *ServerMsg) GetBuzz() *BuzzResult {
	if x != nil {
		if x, ok := x.Payload.(*ServerMsg_Buzz); ok {
			return x.Buzz
		}
	}
	return nil
}

func (x *ServerMsg) GetJudge() *Judge {
	if x != nil {
		if x, ok := x.Payload.(*ServerMsg_Judge); ok {
			return x.Judge
		}
	}
	return nil
}

func (x *ServerMsg) GetBoard() *Scoreboard {
	if x != nil {
		if x, ok := x.Payload.(*ServerMsg_Board); ok {
			return x.Board
		}
	}
	return nil
}

func (x *ServerMsg) GetInfo() *Info {
	if x != nil {
		if x, ok := x.Payload.(*ServerMsg_Info); ok {
			return x.Info
		}
	}
	return nil
}

func (x *ServerMsg) GetErr() *Error {
	if x != nil {
		if x, ok := x.Payload.(*ServerMsg_Err); ok {
			return x.Err
		}
	}
	return nil
}

type isServerMsg_Payload interface {
	isServerMsg_Payload()
}

type ServerMsg_Welcome struct {
	Welcome *Welcome `protobuf:"bytes,1,opt,name=welcome,proto3,oneof"`
}

type ServerMsg_Question struct {
	Question *Question `protobuf:"bytes,2,opt,name=question,proto3,oneof"`
}

type ServerMsg_Buzz struct {
	Buzz *BuzzResult `protobuf:"bytes,3,opt,name=buzz,proto3,oneof"`
}

type ServerMsg_Judge struct {
	Judge *Judge `protobuf:"bytes,4,opt,name=judge,proto3,oneof"`
}

type ServerMsg_Board struct {
	Board *Scoreboard `protobuf:"bytes,5,opt,name=board,proto3,oneof"`
}

type ServerMsg_Info struct {
	Info *Info `protobuf:"bytes,6,opt,name=info,proto3,oneof"`
}

type ServerMsg_Err struct {
	Err *Error `protobuf:"bytes,7,opt,name=err,proto3,oneof"`
}

func (*ServerMsg_Welcome) isServerMsg_Payload() {}

func (*ServerMsg_Question) isServerMsg_Payload() {}

func (*ServerMsg_Buzz) isServerMsg_Payload() {}

func (*ServerMsg_Judge) isServerMsg_Payload() {}

func (*ServerMsg_Board) isServerMsg_Payload() {}

func (*ServerMsg_Info) isServerMsg_Payload() {}

func (*ServerMsg_Err) isServerMsg_Payload() {}

type Welcome struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Welcome) Reset() {
	*x = Welcome{}
	mi := &file_quiz_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Welcome) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Welcome) ProtoMessage() {}

func (x *Welcome) ProtoReflect() protoreflect.Message {
	mi := &file_quiz_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Welcome.ProtoReflect.Descriptor instead.
func (*Welcome) Descriptor() ([]byte, []int) {
	return file_quiz_proto_rawDescGZIP(), []int{6}
}

func (x *Welcome) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *Welcome) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Question struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Index         int32                  `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Text          string                 `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Question) Reset() {
	*x = Question{}
	mi := &file_quiz_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Question) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Question) ProtoMessage() {}

func (x *Question) ProtoReflect() protoreflect.Message {
	mi := &file_quiz_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Question.ProtoReflect.Descriptor instead.
func (*Question) Descriptor() ([]byte, []int) {
	return file_quiz_proto_rawDescGZIP(), []int{7}
}

func (x *Question) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Question) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type BuzzResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BuzzResult) Reset() {
	*x = BuzzResult{}
	mi := &file_quiz_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuzzResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuzzResult) ProtoMessage() {}

func (x *BuzzResult) ProtoReflect() protoreflect.Message {
	mi := &file_quiz_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuzzResult.ProtoReflect.Descriptor instead.
func (*BuzzResult) Descriptor() ([]byte, []int) {
	return file_quiz_proto_rawDescGZIP(), []int{8}
}

func (x *BuzzResult) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *BuzzResult) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Judge struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Correct       bool                   `protobuf:"varint,2,opt,name=correct,proto3" json:"correct,omitempty"`
	Answer        string                 `protobuf:"bytes,3,opt,name=answer,proto3" json:"answer,omitempty"`
	Comment       string                 `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Judge) Reset() {
	*x = Judge{}
	mi := &file_quiz_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Judge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Judge) ProtoMessage() {}

func (x *Judge) ProtoReflect() protoreflect.Message {
	mi := &file_quiz_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Judge.ProtoReflect.Descriptor instead.
func (*Judge) Descriptor() ([]byte, []int) {
	return file_quiz_proto_rawDescGZIP(), []int{9}
}

func (x *Judge) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *Judge) GetCorrect() bool {
	if x != nil {
		return x.Correct
	}
	return false
}

func (x *Judge) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

func (x *Judge) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type Scoreboard struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Scores        []*Score               `protobuf:"bytes,1,rep,name=scores,proto3" json:"scores,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Scoreboard) Reset() {
	*x = Scoreboard{}
	mi := &file_quiz_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Scoreboard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Scoreboard) ProtoMessage() {}

func (x *Scoreboard) ProtoReflect() protoreflect.Message {
	mi := &file_quiz_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Scoreboard.ProtoReflect.Descriptor instead.
func (*Scoreboard) Descriptor() ([]byte, []int) {
	return file_quiz_proto_rawDescGZIP(), []int{10}
}

func (x *Scoreboard) GetScores() []*Score {
	if x != nil {
		return x.Scores
	}
	return nil
}

type Score struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Points        int32                  `protobuf:"varint,2,opt,name=points,proto3" json:"points,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Score) Reset() {
	*x = Score{}
	mi := &file_quiz_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Score) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Score) ProtoMessage() {}

func (x *Score) ProtoReflect() protoreflect.Message {
	mi := &file_quiz_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Score.ProtoReflect.Descriptor instead.
func (*Score) Descriptor() ([]byte, []int) {
	return file_quiz_proto_rawDescGZIP(), []int{11}
}

func (x *Score) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Score) GetPoints() int32 {
	if x != nil {
		return x.Points
	}
	return 0
}

type Info struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Text          string                 `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Info) Reset() {
	*x = Info{}
	mi := &file_quiz_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Info) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Info) ProtoMessage() {}

func (x *Info) ProtoReflect() protoreflect.Message {
	mi := &file_quiz_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Info.ProtoReflect.Descriptor instead.
func (*Info) Descriptor() ([]byte, []int) {
	return file_quiz_proto_rawDescGZIP(), []int{12}
}

func (x *Info) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type Error struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Text          string                 `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Error) Reset() {
	*x = Error{}
	mi := &file_quiz_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_quiz_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_quiz_proto_rawDescGZIP(), []int{13}
}

func (x *Error) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

var File_quiz_proto protoreflect.FileDescriptor

const file_quiz_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"quiz.proto\x12\aquiz.v1\"\xce\x01\n" +
	"\tClientMsg\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12#\n" +
	"\x04join\x18\n" +
	" \x01(\v2\r.quiz.v1.JoinH\x00R\x04join\x12#\n" +
	"\x04buzz\x18\v \x01(\v2\r.quiz.v1.BuzzH\x00R\x04buzz\x12)\n" +
	"\x06answer\x18\f \x01(\v2\x0f.quiz.v1.AnswerH\x00R\x06answer\x12$\n" +
	"\x02hb\x18\r \x01(\v2\x12.quiz.v1.HeartbeatH\x00R\x02hbB\t\n" +
	"\apayload\"\x1a\n" +
	"\x04Join\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"\x1b\n" +
	"\x04Buzz\x12\x13\n" +
	"\x05ts_ms\x18\x01 \x01(\x03R\x04tsMs\"\x1c\n" +
	"\x06Answer\x12\x12\n" +
	"\x04text\x18\x01 \x01(\tR\x04text\"\v\n" +
	"\tHeartbeat\"\xbe\x02\n" +
	"\tServerMsg\x12,\n" +
	"\awelcome\x18\x01 \x01(\v2\x10.quiz.v1.WelcomeH\x00R\awelcome\x12/\n" +
	"\bquestion\x18\x02 \x01(\v2\x11.quiz.v1.QuestionH\x00R\bquestion\x12)\n" +
	"\x04buzz\x18\x03 \x01(\v2\x13.quiz.v1.BuzzResultH\x00R\x04buzz\x12&\n" +
	"\x05judge\x18\x04 \x01(\v2\x0e.quiz.v1.JudgeH\x00R\x05judge\x12+\n" +
	"\x05board\x18\x05 \x01(\v2\x13.quiz.v1.ScoreboardH\x00R\x05board\x12#\n" +
	"\x04info\x18\x06 \x01(\v2\r.quiz.v1.InfoH\x00R\x04info\x12\"\n" +
	"\x03err\x18\a \x01(\v2\x0e.quiz.v1.ErrorH\x00R\x03errB\t\n" +
	"\apayload\":\n" +
	"\aWelcome\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"4\n" +
	"\bQuestion\x12\x14\n" +
	"\x05index\x18\x01 \x01(\x05R\x05index\x12\x12\n" +
	"\x04text\x18\x02 \x01(\tR\x04text\"=\n" +
	"\n" +
	"BuzzResult\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"p\n" +
	"\x05Judge\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12\x18\n" +
	"\acorrect\x18\x02 \x01(\bR\acorrect\x12\x16\n" +
	"\x06answer\x18\x03 \x01(\tR\x06answer\x12\x18\n" +
	"\acomment\x18\x04 \x01(\tR\acomment\"4\n" +
	"\n" +
	"Scoreboard\x12&\n" +
	"\x06scores\x18\x01 \x03(\v2\x0e.quiz.v1.ScoreR\x06scores\"3\n" +
	"\x05Score\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x16\n" +
	"\x06points\x18\x02 \x01(\x05R\x06points\"\x1a\n" +
	"\x04Info\x12\x12\n" +
	"\x04text\x18\x01 \x01(\tR\x04text\"\x1b\n" +
	"\x05Error\x12\x12\n" +
	"\x04text\x18\x01 \x01(\tR\x04text2:\n" +
	"\x04Quiz\x122\n" +
	"\x04Play\x12\x12.quiz.v1.ClientMsg\x1a\x12.quiz.v1.ServerMsg(\x010\x01B\x0eZ\f/quizapp/genb\x06proto3"

var (
	file_quiz_proto_rawDescOnce sync.Once
	file_quiz_proto_rawDescData []byte
)

func file_quiz_proto_rawDescGZIP() []byte {
	file_quiz_proto_rawDescOnce.Do(func() {
		file_quiz_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_quiz_proto_rawDesc), len(file_quiz_proto_rawDesc)))
	})
	return file_quiz_proto_rawDescData
}

var file_quiz_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_quiz_proto_goTypes = []any{
	(*ClientMsg)(nil),  // 0: quiz.v1.ClientMsg
	(*Join)(nil),       // 1: quiz.v1.Join
	(*Buzz)(nil),       // 2: quiz.v1.Buzz
	(*Answer)(nil),     // 3: quiz.v1.Answer
	(*Heartbeat)(nil),  // 4: quiz.v1.Heartbeat
	(*ServerMsg)(nil),  // 5: quiz.v1.ServerMsg
	(*Welcome)(nil),    // 6: quiz.v1.Welcome
	(*Question)(nil),   // 7: quiz.v1.Question
	(*BuzzResult)(nil), // 8: quiz.v1.BuzzResult
	(*Judge)(nil),      // 9: quiz.v1.Judge
	(*Scoreboard)(nil), // 10: quiz.v1.Scoreboard
	(*Score)(nil),      // 11: quiz.v1.Score
	(*Info)(nil),       // 12: quiz.v1.Info
	(*Error)(nil),      // 13: quiz.v1.Error
}
var file_quiz_proto_depIdxs = []int32{
	1,  // 0: quiz.v1.ClientMsg.join:type_name -> quiz.v1.Join
	2,  // 1: quiz.v1.ClientMsg.buzz:type_name -> quiz.v1.Buzz
	3,  // 2: quiz.v1.ClientMsg.answer:type_name -> quiz.v1.Answer
	4,  // 3: quiz.v1.ClientMsg.hb:type_name -> quiz.v1.Heartbeat
	6,  // 4: quiz.v1.ServerMsg.welcome:type_name -> quiz.v1.Welcome
	7,  // 5: quiz.v1.ServerMsg.question:type_name -> quiz.v1.Question
	8,  // 6: quiz.v1.ServerMsg.buzz:type_name -> quiz.v1.BuzzResult
	9,  // 7: quiz.v1.ServerMsg.judge:type_name -> quiz.v1.Judge
	10, // 8: quiz.v1.ServerMsg.board:type_name -> quiz.v1.Scoreboard
	12, // 9: quiz.v1.ServerMsg.info:type_name -> quiz.v1.Info
	13, // 10: quiz.v1.ServerMsg.err:type_name -> quiz.v1.Error
	11, // 11: quiz.v1.Scoreboard.scores:type_name -> quiz.v1.Score
	0,  // 12: quiz.v1.Quiz.Play:input_type -> quiz.v1.ClientMsg
	5,  // 13: quiz.v1.Quiz.Play:output_type -> quiz.v1.ServerMsg
	13, // [13:14] is the sub-list for method output_type
	12, // [12:13] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_quiz_proto_init() }
func file_quiz_proto_init() {
	if File_quiz_proto != nil {
		return
	}
	file_quiz_proto_msgTypes[0].OneofWrappers = []any{
		(*ClientMsg_Join)(nil),
		(*ClientMsg_Buzz)(nil),
		(*ClientMsg_Answer)(nil),
		(*ClientMsg_Hb)(nil),
	}
	file_quiz_proto_msgTypes[5].OneofWrappers = []any{
		(*ServerMsg_Welcome)(nil),
		(*ServerMsg_Question)(nil),
		(*ServerMsg_Buzz)(nil),
		(*ServerMsg_Judge)(nil),
		(*ServerMsg_Board)(nil),
		(*ServerMsg_Info)(nil),
		(*ServerMsg_Err)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_quiz_proto_rawDesc), len(file_quiz_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_quiz_proto_goTypes,
		DependencyIndexes: file_quiz_proto_depIdxs,
		MessageInfos:      file_quiz_proto_msgTypes,
	}.Build()
	File_quiz_proto = out.File
	file_quiz_proto_goTypes = nil
	file_quiz_proto_depIdxs = nil
}
